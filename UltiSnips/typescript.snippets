snippet ng-component
import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';

@Component({
    selector: 'mon-`!p snip.rv = snip.basename.replace('.component', '')`',
    changeDetection: ChangeDetectionStrategy.OnPush,
    templateUrl: '`!p snip.rv = snip.basename.replace('.component', '')`.component.html',
    styleUrls: ['`!p snip.rv = snip.basename.replace('.component', '')`.component.html']
})
export class ${1:#:ComponentName}Component {
    constructor() { }
}
endsnippet

snippet ng-container
import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';
import { Store } from '@ngrx/store';
import * as fromStore from '../../store';

@Component({
    selector: 'mon-`!p snip.rv = snip.basename.replace('.component', '')`',
    changeDetection: ChangeDetectionStrategy.OnPush,
    templateUrl: '`!p snip.rv = snip.basename.replace('.component', '')`.component.html',
    styleUrls: ['`!p snip.rv = snip.basename.replace('.component', '')`.component.html']
})
export class ${1:#:ComponentName}Component implements OnInit {
    constructor(private store$: Store<fromStore.${2:#:State}>) { }

    ngOnInit() { }
    ${0}
}
endsnippet

snippet ng-service
    import { Injectable } from '@angular/core';

    @Injectable()
    export class ${1:#:ServiceName}Service {
        ${0}
        constructor() { }

    }
endsnippet

snippet ng-pipe
    import { Pipe, PipeTransform } from '@angular/core';

    @Pipe({
        name: '${name}'
    })

    export class ${1:#:PipeName}Pipe implements PipeTransform {
        transform(value: any, args: any[]): any {
            ${0}
        }
    }
endsnippet

snippet ng-routes
    @Routes([
        { path: '/${1:#:path}', component: ${2:#:Component} }${0}
    ])
endsnippet

snippet ng-route-path
    { path: '/${1:#:path}', component: ${2:#:Component} }${0}
endsnippet


snippet ng-http-get
    return this.http.get('${1:#:url}')
    .map((res: Response) => res.json()${0});
endsnippet

snippet ng-subscribe
    this.${1:#:service}.${2:#:function}
    .subscribe(${3:#:arg} => this.${4:#:property} = ${5:#:arg});
    ${0}
endsnippet

snippet ng-bootstrap
    import { enableProdMode } from '@angular/core';
    import { bootstrap } from '@angular/platform-browser-dynamic';

    import { ${1:#:AppComponent} } from './${2:#:name}.component';

    // enableProdMode();

    bootstrap(${3:#:AppComponent})
        .then(success => console.log('Bootstrap success'))
        .catch(error => console.log(error));
    ${0}
endsnippet

snippet ng-component-root
    import { Component } from '@angular/core';
    import { HTTP_PROVIDERS } from '@angular/http';
    import { Routes, ROUTER_DIRECTIVES, ROUTER_PROVIDERS } from '@angular/router';
    import 'rxjs/Rx'; // load the full rxjs

    @Component({
        moduleId: module.id,
        selector: '${1:#:selector}',
        templateUrl: '${2:#:name}.component.html',
        directives: [ROUTER_DIRECTIVES],
        providers: [
            HTTP_PROVIDERS,
            ROUTER_PROVIDERS
        ]
    })
    @Routes([
        ${0}
    ])
    export class AppComponent {}
endsnippet
